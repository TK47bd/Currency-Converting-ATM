/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package currencyconverter;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;


public class Check_Dep extends javax.swing.JFrame {

Connection conn;
ResultSet rs;
PreparedStatement pst;

private String Fp;
public String FileStr;

DepositExchange DE = new DepositExchange();

    public Check_Dep() {
        super("Login");
        initComponents();
        conn = javaconnect.ConnecrDb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Input = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Authentication_Panel");
        setResizable(false);

        jLabel1.setText("Enter Pin to Access:");

        Input.setBackground(new java.awt.Color(204, 255, 255));
        Input.setAutoscrolls(false);
        Input.setSelectedTextColor(new java.awt.Color(204, 255, 255));
        Input.setSelectionColor(new java.awt.Color(153, 153, 153));

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 145, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try{
            int i = Integer.parseInt(Input.getText());
        }
        catch(NumberFormatException e1){
            JOptionPane.showMessageDialog(null, "Please Enter Valid PIN");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Input\n"+e);
        } 
        
         String sql="select * from PIN_Base where PIN=?";
         
        try{
            pst=conn.prepareStatement(sql);
            String str = Input.getText();
            pst.setString(1, str);
            rs=pst.executeQuery();
            
            if(rs.next()){
                
                String Nam = rs.getString("Name");
                String AC = rs.getString("Ac_no");
                double BD = rs.getDouble("BDT");                
                double Money = DE.money;
                double Converted = DE.Con_money;
                String Currency_frmt = DE.Currency;
                
                double Exchanged = (rs.getDouble(Currency_frmt));
                Exchanged = Exchanged + Converted; 
                double Updated_Money =  BD - Money;
                
                String pattern = "MM/dd/yyyy HH:mm:ss";
                DateFormat df = new SimpleDateFormat(pattern);
                Date today = Calendar.getInstance().getTime(); 
                String todayString = df.format(today);
                
                JOptionPane.showMessageDialog(null, "Authentication successfully done!");
               
                if(BD >= Money){
                    
                String sql2 = "UPDATE PIN_Base SET BDT = '"+Updated_Money+"' ,'"+ Currency_frmt + "' = '"+Exchanged+"' ,Last_Trans_Date = '"+todayString+"' WHERE PIN = '" +str+"'" ;                
                
                pst=conn.prepareStatement(sql2);
                conn.setAutoCommit(false);
                pst.execute();
                conn.commit();
                
                Thread.sleep(1380);
                
                JOptionPane.showMessageDialog(null, "Transaction Successful!!\nTo " + Converted + " " + Currency_frmt + " From " + Money +" BDT\n" + "@ " + todayString);
                
                Thread.sleep(2560);
                
                JOptionPane.showMessageDialog(null, "Log Updated!!");
                
                Fp = "DataBase\\Record\\"+"162"+str+"5292"+".DB";
                
                File log = new File(Fp);
                try{
                if(log.exists()==false){
                log.createNewFile();
                }
                PrintWriter out = new PrintWriter(new FileWriter(log, true));
                
                out.append("******* " + "Transaction log (Date : "+ todayString +") *******");
                out.append(String.format("%n", ""));
                
                out.append("------------------------------------------------------------");
               
                out.append(String.format("%n", ""));  
                out.append("Name               :  " + Nam);
                
                out.append(String.format("%n", ""));  
                out.append("AC                     :  " + AC);
 
                out.append(String.format("%n", ""));  
                out.append("From BDT        :  " + Money);

                out.append(String.format("%n", ""));  
                out.append("To " + Currency_frmt + "             :  " + Converted);
                
                out.append(String.format("%n", ""));
                out.append("------------------------------------------------------------");                
                out.append(String.format("%n", ""));
                out.append(String.format("%n", ""));                
                
                out.close();
                
                }catch(IOException ee){
                System.out.println("Log_Saving_ERROR!!\n"+ee);
                }
                
                conn.close();
                
                OptionPanel OP = new OptionPanel();
                OP.setVisible(true);
                dispose();
   
              }else{
                    JOptionPane.showMessageDialog(null, "Transaction Unsuccessful!!\nNot Enough Balance: " + Money);
                    
                    rs.close();
                    pst.close();
                    
                    WithDraw WD = new WithDraw();
                    WD.setVisible(true);     
                    dispose();                     
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Incorrect PIN\nTry Again!");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                rs.close();
                pst.close();
            }catch(Exception e1){
                JOptionPane.showMessageDialog(null,e1);
            }
        }         
    
              
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        WithDraw WD = new WithDraw();
        WD.setVisible(true);     
        dispose();
    
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Check_Dep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Check_Dep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Check_Dep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Check_Dep.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Check_Dep().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
